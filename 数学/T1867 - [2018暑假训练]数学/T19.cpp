#include <bits/stdc++.h>
using namespace std;

int k, id, cnt = -1, pri[100010];
bool pri_a[3000010], pri_b[3000010];
const long long table[] = {0, 1299709, 2750159, 4256233, 5800079, 7368787, 8960453, 10570841, 12195257, 13834103, 15485863, 17144489, 18815231, 20495843, 22182343, 23879519, 25582153, 27290279, 29005541, 30723761, 32452843, 34186049, 35926307, 37667659, 39410867, 41161739, 42920191, 44680319, 46441207, 48210713, 49979687, 51754979, 53533511, 55316903, 57099299, 58885999, 60678089, 62473031, 64268779, 66068881, 67867967, 69672821, 71480051, 73289701, 75103493, 76918253, 78736451, 80556703, 82376219, 84200279, 86028121, 87857527, 89687683, 91519063, 93354673, 95189089, 97026233, 98866927, 100711433, 102551567, 104395301, 106244933, 108092981, 109938667, 111794857, 113648393, 115507867, 117363991, 119227007, 121086457, 122949823, 124811173, 126673973, 128541799, 130408841, 132276691, 134150999, 136023761, 137896249, 139772287, 141650939, 143522927, 145403459, 147281009, 149163283, 151048969, 152935933, 154819699, 156704111, 158594203, 160481183, 162373313, 164263003, 166158637, 168048733, 169941221, 171834293, 173729849, 175628471, 177525767, 179424673, 181327577, 183236563, 185133821, 187038013, 188943803, 190850567, 192761039, 194667071, 196576753, 198491317, 200401979, 202313623, 204227449, 206141381, 208055039, 209968637, 211887451, 213808381, 215723329, 217645177, 219566129, 221489557, 223407631, 225330877, 227254201, 229179857, 231104359, 233031221, 234961003, 236887691, 238810163, 240737933, 242673341, 244605341, 246534469, 248467607, 250399337, 252334729, 254269517, 256203161, 258141997, 260079329, 262016009, 263956241, 265892017, 267836651, 269778611, 271723961, 273666919, 275604541, 277547581, 279495479, 281436539, 283384351, 285335551, 287282221, 289230091, 291177979, 293126077, 295075147, 297027257, 298981073, 300928409, 302883137, 304836283, 306789647, 308739217, 310695751, 312650539, 314606869, 316564747, 318525661, 320486183, 322445899, 324407071, 326363201, 328323199, 330287501, 332252351, 334214459, 336175507, 338141533, 340104239, 342066083, 344032387, 345996247, 347966371, 349931921, 351901153, 353868013, 355836331, 357807467, 359777773, 361749959, 363720391, 365691317, 367660357, 369638207, 371614307, 373587883, 375556421, 377528077, 379499327, 381471547, 383446673, 385426541, 387404131, 389381593, 391364131, 393342739, 395318813, 397303537, 399284911, 401265713, 403245709, 405225637, 407205779, 409192981, 411174217, 413158511, 415142291, 417125273, 419113703, 421101607, 423087251, 425069563, 427057783, 429042751, 431031847, 433024223, 435011243, 437003033, 438990637, 440981143, 442967111, 444960059, 446952479, 448943699, 450937079, 452930459, 454923583, 456911473, 458910583, 460908043, 462900941, 464895083, 466890337, 468884873, 470882761, 472882027, 474883943, 476880769, 478876087, 480871421, 482873123, 484870081, 486870887, 488874781, 490872883, 492876847, 494877793, 496876883, 498879463, 500883569, 502895639, 504900031, 506904191, 508910483, 510921779, 512927357, 514936649, 516939883, 518944403, 520951819, 522960521, 524967329, 526975459, 528981767, 530991353, 533000389, 535010669, 537018367, 539028977, 541037239, 543052459, 545066729, 547078999, 549088459, 551096137, 553105243, 555119441, 557136673, 559149541, 561166147, 563178731, 565194673, 567211109, 569225609, 571245403, 573259391};

void sieve(register long long a, register long long b) {
    for (register long long i = 0; i * i < b; ++i)
        pri_a[i] = 1;
    for (register long long i = 0; i < b - a; ++i)
        pri_b[i] = 1;
    for (register long long i = 2; i * i < b; ++i) {
        if (pri_a[i]) {
            for (register long long j = 2 * i; j * j < b; j += i)
                pri_a[j] = 0;
            for (register long long j = max((long long) 2, (a + i - 1) / i) * i; j < b; j += i)
                pri_b[j - a] = 0;
        }
    }
    for (register long long i = 0; i < b - a; ++i) {
        pri_b[i] && ++cnt;
        if (cnt == k) {
            printf("%lld", a + i);
            return;
        }
    }
}

int main() {
    scanf("%d", &k);
    if (k <= 100000) {
        cnt = 0;
        for (register int i = 2; i <= 1299709; ++i) {
    		if (!pri_a[i]) {
                pri[cnt++] = i;
                if (cnt == k) {
                    printf("%d", i);
                    return 0;
                }
            }
    		for (register int j = 0; j <= cnt && i * pri[j] <= 1299709; ++j) {
    			pri_a[i * pri[j]] = 1;
    			if (!(i % pri[j]))
                    break;
    		}
    	}
    }
    id = k / 100000; cnt += id * 100000;
    sieve(table[id], table[id + 1]);
    return 0;
}
